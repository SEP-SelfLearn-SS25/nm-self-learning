// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    username         String               @id
    displayName      String
    enrollments      Enrollment[]
    competences      AchievedCompetence[]
    completedLessons CompletedLesson[]
}

model Course {
    courseId String  @id
    title    String
    subtitle String
    imgUrl   String?

    slug        String       @unique
    enrollments Enrollment[]
}

model Enrollment {
    status      String
    createdAt   DateTime  @default(now())
    completedAt DateTime?

    courseId String
    course   Course @relation(fields: [courseId], references: [courseId], onDelete: Cascade)

    username String
    student  User   @relation(fields: [username], references: [username], onDelete: Cascade)

    @@id([courseId, username])
}

model Lesson {
    lessonId    String            @id
    slug        String
    title       String
    subtitle    String?
    imgUrl      String?
    competences Competence[]
    completions CompletedLesson[]
}

model CompletedLesson {
    completedLessonId Int @id @default(autoincrement())

    lessonId  String
    lesson    Lesson   @relation(fields: [lessonId], references: [lessonId])
    username  String
    user      User     @relation(fields: [username], references: [username])
    createdAt DateTime @default(now())

    @@index([username, lessonId])
}

model Competence {
    competenceId        String               @id
    title               String
    description         String?
    achievedCompetences AchievedCompetence[]
    lessons             Lesson[]
}

model AchievedCompetence {
    achievedCompetenceId Int @id @default(autoincrement())

    lessonSlug String
    achievedAt DateTime @default(now())

    competenceId String
    competence   Competence @relation(fields: [competenceId], references: [competenceId], onDelete: Cascade)

    username String
    student  User   @relation(fields: [username], references: [username], onDelete: Cascade)

    @@unique([lessonSlug, competenceId, username])
    @@index([competenceId, username])
}
